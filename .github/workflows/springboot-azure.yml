# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:

  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Log in to container registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ secrets.REGISTRY_SOURCE }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_TOKEN }}

  #     - name: Build and push container image to registry
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         push: true
  #         tags: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:${{ github.run_number }}, ${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:latest'
  #         file: ./Dockerfile

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'development'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_APP_SERVICE_NAME }}
  #         slot-name: 'production'
  #         publish-profile: ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
  #         images: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:${{ github.run_number }}'
  
  test-deployment:
    name: Make HTTP Call
    runs-on: ubuntu-latest
    environment:
      name: 'development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Make HTTP request
        id: http
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://java-springboot-jpa-docker-azure-dev.azurewebsites.net/actuator/health)
          echo "response_code=$response" >> $GITHUB_OUTPUT
          
      # - name: Check response code
      #   id: check_response
      #   run: |
      #     if [[ "${{ steps.http.outputs.response_code }}" == "200" ]]; then
      #       echo "HTTP request failed with response code ${{ steps.http.outputs.response_code }}"
      #       echo "rollback=true" >> $GITHUB_OUTPUT
      #       echo "send_notification=true" >> $GITHUB_OUTPUT
      #       echo ${{ steps.http.outputs.response_code }}
      #     fi

      # - name: Deploy to Azure Web App
      #   if: steps.http.outputs.response_code != '200'
      #   id: deploy-to-webapp
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ env.AZURE_APP_SERVICE_NAME }}
      #     slot-name: 'production'
      #     publish-profile: ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
      #     # images: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:${{ github.run_number }}'
      #     images: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:5'

      - name: Update Variable
        if: steps.http.outputs.response_code == '200'
        id: update_variable
        run: |
          # Define the variable name and new value
          VARIABLE_NAME="STABLE_VERSION"
          NEW_VALUE=${{ github.run_number }}
          echo ${{ secrets.GITHUB_TOKEN }}
          echo ${{ github.repository }}
          
          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          https://api.github.com/repos/nagaraj-s-kharvi/java-springboot-jpa-docker-azure/actions/variables/STABLE_VERSION \
          -d '{"name":"STABLE_VERSION","value":"2"}'
            