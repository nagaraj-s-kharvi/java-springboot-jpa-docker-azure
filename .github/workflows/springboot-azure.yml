# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:

  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Log in to container registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ secrets.REGISTRY_SOURCE }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_TOKEN }}

  #     - name: Build and push container image to registry
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         push: true
  #         tags: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:${{ github.run_number }}, ${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:latest'
  #         file: ./Dockerfile

  # deploy-dev:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'development'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_APP_SERVICE_NAME }}
  #         slot-name: 'production'
  #         publish-profile: ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
  #         images: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:${{ github.run_number }}'
  
  dev-test:
    name: dev env health check
    runs-on: ubuntu-latest
    # needs: deploy-dev
    environment:
        name: 'development'
        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Make HTTPS request
        id: http
        run: |
          echo ${{ env.AZURE_APP_SERVICE_NAME }}
          if [[ -n "$AZURE_APP_SERVICE_NAME" ]]; then
            echo "Environment variable is not null: $AZURE_APP_SERVICE_NAME"
          else
            echo "Environment variable is null"
          fi
          echo $AZURE_APP_SERVICE_NAME
          echo ${{ env.APP_HEALTH_API }}
          echo ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
          response=$(curl -s -o /dev/null -w "%{http_code}" https://java-springboot-jpa-docker-azure-dev.azurewebsites.net/actuator/health)
          echo "response_code=$response" >> $GITHUB_OUTPUT

      - name: Deploy to Azure Web App
        if: steps.http.outputs.response_code != '200'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_APP_SERVICE_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
          images: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:${{ env.STABLE_VERSION }}'

      - name: Update Variable STABLE_VERSION
        if: steps.http.outputs.response_code == '200'
        id: update_variable
        run: |
          VARIABLE_NAME="STABLE_VERSION"
          VARIABLE_NEW_VALUE=${{ github.run_number }}

          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${{ github.repository }}/actions/variables/$VARIABLE_NAME" \
          -d "{\"name\":\"$VARIABLE_NAME\",\"value\":\"$VARIABLE_NEW_VALUE\"}"  