# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build, push and deploy container app to Azure Web App

on:
  push:
    branches:
      - master1
  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ vars.REGISTRY_SOURCE }}
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: '${{ vars.REGISTRY_SOURCE }}/${{ vars.REGISTRY_USERNAME }}/${{ vars.REGISTRY_IMAGE }}:${{ github.run_number }}, ${{ vars.REGISTRY_SOURCE }}/${{ vars.REGISTRY_USERNAME }}/${{ vars.REGISTRY_IMAGE }}:latest'
          file: ./Dockerfile

  dev-deployment:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_APP_SERVICE_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
          images: '${{ vars.REGISTRY_SOURCE }}/${{ vars.REGISTRY_USERNAME }}/${{ vars.REGISTRY_IMAGE }}:${{ github.run_number }}'

  dev-deployment-test:
    name: dev app status check
    runs-on: ubuntu-latest
    needs: dev-deployment
    environment:
        name: 'dev-test'
        url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Make HTTPS request
        id: http
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" "${{ vars.APP_HEALTH_API }}")
          echo "response_code=$response" >> $GITHUB_OUTPUT
          echo $response_code

      - name: Update Variable STABLE_VERSION
        if: steps.http.outputs.response_code == '200'
        id: update_variable
        run: |
          VARIABLE_NAME="STABLE_VERSION"
          VARIABLE_NEW_VALUE=${{ github.run_number }}

          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${{ github.repository }}/actions/variables/$VARIABLE_NAME" \
          -d "{\"name\":\"$VARIABLE_NAME\",\"value\":\"$VARIABLE_NEW_VALUE\"}"  