# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy container app to Azure Web App

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Code
        run: |
          echo "Building Code"

  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Log in to container registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ secrets.REGISTRY_SOURCE }}
  #         username: ${{ secrets.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_TOKEN }}

  #     - name: Build and push container image to registry
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         push: true
  #         tags: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:${{ github.run_number }}, ${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:latest'
  #         file: ./Dockerfile

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: 'development'
  #     url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  #   steps:
  #     - name: Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ env.AZURE_APP_SERVICE_NAME }}
  #         slot-name: 'production'
  #         publish-profile: ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
  #         images: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:${{ github.run_number }}'
  
  # approval:
  #   needs: deploy
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Create approval
  #       id: approval
  #       uses: actions/github-script@v4
  #       with:
  #         github-token: ${{ secrets.GITHUB_TOKEN }}
  #         script: |
  #           const { data: workflowRuns } = await github.actions.listWorkflowRuns({
  #             owner: context.repo.owner,
  #             repo: context.repo.repo,
  #             workflow_id: context.workflow,
  #             branch: context.ref.replace('refs/heads/', '')
  #           });

  #           const latestRun = workflowRuns.workflow_runs.find(run => run.id === context.runId);
  #           const nextRun = workflowRuns.workflow_runs.find(run => run.created_at > latestRun.created_at);

  #           if (nextRun) {
  #             await github.actions.createApproval({
  #               owner: context.repo.owner,
  #               repo: context.repo.repo,
  #               run_id: nextRun.id
  #             });
  #           }

  # production:
  #   needs: [deploy, approval]
  #   if: ${{ github.event.workflow_run.conclusion == 'success' && needs.approval.result == 'approved' }}
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - name: Production Code
  #       run: |
  #         echo "Production Code"
  deploy:
    needs: build
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy Code
        run: |
          echo "Deploying Code"
  
  test-deployment:
    name: Make HTTP Call
    needs: [deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Make HTTP request
        id: http
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://java-springboot-jpa-docker-azure-dev.azurewebsites.net/actuator/health)
          echo "response_code=$response" >> $GITHUB_OUTPUT
          
      - name: Check response code
        id: check_response
        run: |
          if [[ "${{ steps.http.outputs.response_code }}" == "200" ]]; then
            echo "HTTP request failed with response code ${{ steps.http.outputs.response_code }}"
            echo "send_notification=true" >> $GITHUB_OUTPUT
            echo ${{ steps.http.outputs.response_code }}
          fi

      # - name: Send Notification
      #   if: steps.check_response.outputs.send_notification == 'true'
      #   run: |
      #     # Replace this with the command to send a notification
      #     echo "Sending notification because the HTTP response code is not 200"

  junk:
    needs: test-deployment
    name: junk
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Deploy Code
        run: |
          echo ${{ needs.test-deployment.outputs['check_response'] == 'true' }}

  rollback-job:
    # name: Rollback Job
    runs-on: ubuntu-latest
    needs: test-deployment
    environment:
      name: 'development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    if: ${{ needs.test-deployment.outputs['check_response'] == 'true' }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_APP_SERVICE_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
          # images: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:${{ github.run_number }}'
          images: '${{ secrets.REGISTRY_SOURCE }}/${{ secrets.REGISTRY_USERNAME }}/${{ secrets.REGISTRY_IMAGE }}:6'