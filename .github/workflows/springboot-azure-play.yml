# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Test

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:

  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2

  #     - name: Log in to container registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ${{ vars.REGISTRY_SOURCE }}
  #         username: ${{ vars.REGISTRY_USERNAME }}
  #         password: ${{ secrets.REGISTRY_TOKEN }}

  dev-deployment:
    runs-on: ubuntu-latest
    # needs: build
    environment:
      name: 'development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ vars.AZURE_APP_SERVICE_NAME }}
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
          images: '${{ vars.REGISTRY_SOURCE }}/${{ vars.REGISTRY_USERNAME }}/${{ vars.REGISTRY_IMAGE }}:56'
    
      - name: Set Environment Variable
        run: |
          # echo ${{ steps.deploy-to-webapp.outputs.webapp-url }}
          # echo "${{ steps.deploy-to-webapp.outputs.webapp-url }}"
          # echo "DEV_URL=${{ steps.deploy-to-webapp.outputs.webapp-url }}" >> $GITHUB_ENV
          echo "1 Working"
          echo ${ DEV_URL }
          echo "2 Working"
        env:
          DEV_URL: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

  dev-deployment-test:
    name: dev app status check
    runs-on: ubuntu-latest
    needs: dev-deployment
    environment:
        name: 'dev-test'
        url: ${ DEV_URL }

    steps:
      - name: Make HTTPS request
        id: http
        run: |
          echo ${ DEV_URL }
          response=$(curl -s -o /dev/null -w "%{http_code}" "${{ vars.APP_HEALTH_API }}")
          echo "RESPONSE_HTTP_CODE=$response" >> "$GITHUB_ENV"
          echo "$RESPONSE_HTTP_CODE"
          echo ${ DEV_URL }
          echo "${{ env.URL }}"

      # - name: Deploy to Azure Web App
      #   if: ${{ env.RESPONSE_HTTP_CODE != '200' }}
      #   id: deploy-to-webapp
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ vars.AZURE_APP_SERVICE_NAME }}
      #     slot-name: 'production'
      #     publish-profile: ${{ secrets.AZURE_APP_SERVICE_UI_PUBLISH_PROFILE }}
      #     images: '${{ vars.REGISTRY_SOURCE }}/${{ vars.REGISTRY_USERNAME }}/${{ vars.REGISTRY_IMAGE }}:${{ vars.STABLE_VERSION }}'

      - name: Update Variable STABLE_VERSION
        if: ${{ env.RESPONSE_HTTP_CODE == '200' }}
        id: update_variable
        run: |
          VARIABLE_NAME="STABLE_VERSION"
          VARIABLE_NEW_VALUE=${{ github.run_number }}
          echo ${{ env.RESPONSE_HTTP_CODE }}
          echo $VARIABLE_NAME
          echo $VARIABLE_NEW_VALUE

          curl -L \
          -X PATCH \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.API_TOKEN }}" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          "https://api.github.com/repos/${{ github.repository }}/actions/variables/$VARIABLE_NAME" \
          -d "{\"name\":\"$VARIABLE_NAME\",\"value\":\"$VARIABLE_NEW_VALUE\"}"  